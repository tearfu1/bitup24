<style>
	/* –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–±—ã—Ç–∏—è */
	.bitup-event-card {
		background-color: #22a746;
		color: white;
		padding: 20px;
		border-radius: 10px;
		width: 400px;
		font-family: Arial, sans-serif;
		cursor: pointer;
		transition: all 0.3s ease;
		position: relative;
		min-width: 400px; /* –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ */
		border: 1px solid #ccc; /* –ü—Ä–∏–º–µ—Ä –≥—Ä–∞–Ω–∏—Ü—ã */
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* –ü—Ä–∏–º–µ—Ä —Ç–µ–Ω–µ–π –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ */
		box-sizing: border-box;
	}

	.bitup-event-card:hover {
		background-color: #1e8e3f;
		transform: translateY(-2px);
	}

	.bitup-event-card--error {
		border: 2px solid #ff4757;
		box-shadow: 0 0 10px rgba(255, 71, 87, 0.3);
	}

	/* –≠–ª–µ–º–µ–Ω—Ç—ã –∫–∞—Ä—Ç–æ—á–∫–∏ */
	.bitup-event-card__title {
		font-size: 18px;
		font-weight: bold;
		margin-bottom: 5px;
	}

	.bitup-event-card__date {
		font-size: 14px;
		margin-bottom: 15px;
		opacity: 0.9;
	}

	.bitup-event-card__participants {
		display: flex;
		align-items: center;
		font-size: 16px;
	}

	.bitup-event-card__participants-icon {
		margin-right: 8px;
	}

	.bitup-event-card__participants-count {
		font-weight: bold;
	}

	.bitup-event-card__loading {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		background-color: rgba(0, 0, 0, 0.7);
		padding: 10px 15px;
		border-radius: 5px;
		font-size: 14px;
	}

	/* –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ */
	.bitup-event-card-wrapper {
		margin-bottom: 15px;
	}

	/* –°—Ç–∏–ª–∏ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ */
	.bitup-event-card-list {
		padding: 0;
		margin: 0;
	}

	.bitup-main-events,
	.bitup-grid-events,
	.bitup-all-events {
		list-style: none;
		padding: 0;
		margin: 0 0 20px 0;
		display: flex;
		flex-wrap: wrap;
		gap: 15px;
	}

	.bitup-main-event-item,
	.bitup-grid-event-item,
	.bitup-event-item {
		list-style: none;
	}

	/* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
	@media (max-width: 768px) {
		.bitup-event-card {
			width: 100%;
			max-width: 400px;
		}

		.bitup-main-events,
		.bitup-grid-events,
		.bitup-all-events {
			flex-direction: column;
			align-items: center;
		}
	}

	/* –ê–Ω–∏–º–∞—Ü–∏–∏ */
	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateY(20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.bitup-event-card-wrapper {
		animation: fadeIn 0.3s ease;
	}

	/* –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ */
	.bitup-event-card--loading {
		pointer-events: none;
		opacity: 0.7;
	}

	.bitup-event-card--loading::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
		animation: loading 1.5s infinite;
	}

	@keyframes loading {
		0% {
			transform: translateX(-100%);
		}
		100% {
			transform: translateX(100%);
		}
	}

	#air-workarea-content {
		background-color: rgba(0, 0, 0, 0);
	}

	#air-workarea-content * {
		opacity: 1;
	}

	.bitup-event-container {
		display: flex;
		flex-direction: row;
		overflow-x: auto;
		gap: 16px; /* –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ */
		padding: 16px; /* –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
		box-sizing: border-box; /* –ß—Ç–æ–±—ã padding –Ω–µ –ø–æ–≤–ª–∏—è–ª –Ω–∞ –æ–±—â—É—é —à–∏—Ä–∏–Ω—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
		width: 100%; /* –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∞ —à–∏—Ä–∏–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É */
	}

	.bitup-event-card__title, .bitup-event-card__date, .bitup-event-card__participants {
		margin-bottom: 8px; /* –û—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ */
	}

	.scroll-button {
		width: 40px;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.1);
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		z-index: 1;
		position: sticky;
	}

	.scroll-button.left {
		left: 0;
		height: 150px;
	}

	.scroll-button.right {
		right: 0;
		height: 150px;
	}

	.bitup-event-container {
		display: flex;
		overflow-x: hidden; /* –°–∫—Ä—ã—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–∫—Ä–æ–ª–ª–±–∞—Ä */
		overflow-y: hidden;
		scrollbar-width: none; /* –î–ª—è Firefox */
		-ms-overflow-style: none; /* –î–ª—è –¥–ª—è Internet Explorer –∏ Edge */
	}

	.bitup-event-container::-webkit-scrollbar {
		display: none; /* –î–ª—è Chrome, Safari –∏ Opera */
	}

	.bitup-event-card {
		min-width: 400px;
		/* –î—Ä—É–≥–∏–µ —Å—Ç–∏–ª–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ */
		margin: 0 5px; /* –û—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ */
	}

	.scroll-container {
		display: flex;
		align-items: center;
	}

	.scroll-button.left::before {
		transform: rotate(135deg); /* –ü–æ–≤–æ—Ä–æ—Ç –¥–ª—è —Å—Ç—Ä–µ–ª–∫–∏ –≤–ª–µ–≤–æ */
	}

	.scroll-button.right::before {
		transform: rotate(45deg); /* –ü–æ–≤–æ—Ä–æ—Ç –¥–ª—è —Å—Ç—Ä–µ–ª–∫–∏ –≤–ø—Ä–∞–≤–æ */
	}

	.bitup-event-container {
		display: flex;
		overflow-x: hidden; /* –°–∫—Ä—ã—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–∫—Ä–æ–ª–ª–±–∞—Ä */
		scrollbar-width: none; /* –î–ª—è Firefox */
		-ms-overflow-style: none; /* –î–ª—è Internet Explorer –∏ Edge */
	}

	.bitup-event-container::-webkit-scrollbar {
		display: none; /* –î–ª—è Chrome, Safari –∏ Opera */
	}

	.bitup-event-card {
		min-width: 400px;
		margin: 0 5px;
		/* –ü—Ä–∏–º–µ—Ä –≤—ã—Å–æ—Ç—ã –∫–∞—Ä—Ç–æ—á–µ–∫ */
		height: 150px; /* –≠—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∞–∫–∏–º –∂–µ, –∫–∞–∫ —É —Å—Ç—Ä–µ–ª–æ–∫ */
		/* –î—Ä—É–≥–∏–µ —Å—Ç–∏–ª–∏ */
	}

	.bitup-card-link {
		text-decoration: none; /* –£–±–∏—Ä–∞–µ—Ç –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ */
		color: inherit; /* –ù–∞—Å–ª–µ–¥—É–µ—Ç —Ü–≤–µ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è */
	}
</style>

<div class="scroll-container">
	<div class="scroll-button left">&#9664;</div>
	<div class="bitup-event-container">
	</div>
	<div class="scroll-button right">&#9654;</div>
</div>

<script>
	function escapeHtml(text) {
		const div = document.createElement('div');
		div.textContent = text;
		return div.innerHTML;
	}

	document.addEventListener('DOMContentLoaded', () => {
		const scrollContainer = document.querySelector('.bitup-event-container');
		const leftButton = document.querySelector('.scroll-button.left');
		const rightButton = document.querySelector('.scroll-button.right');

		const scrollAmount = 250; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏–∫—Å–µ–ª–µ–π –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

		leftButton.addEventListener('mouseenter', () => {
			scrollContainer.scrollBy({ left: -scrollContainer.scrollWidth, behavior: 'smooth' });
		});

		rightButton.addEventListener('mouseenter', () => {
			scrollContainer.scrollBy({ left: scrollContainer.scrollWidth, behavior: 'smooth' });
		});
	});

	BX.ajax.runAction('bitup24.api.BitUp24.getCards').then(response => {
		const container = document.querySelector('.bitup-event-container'); // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
		const cards = response.data; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ response.data

		cards.forEach(card => {
			let cardDiv = document.createElement('div'); // –°–æ–∑–¥–∞–π—Ç–µ div-—ç–ª–µ–º–µ–Ω—Ç
			cardDiv.classList.add('bitup-event-card');

			// –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–º–∏
			cardDiv.innerHTML = `
			<a class="bitup-card-link" href="/bitup24/event/${escapeHtml(card.id)}/">
            <div class="bitup-event-card__title">${escapeHtml(card.title)}</div>
            <div class="bitup-event-card__date">${escapeHtml(card.date)}</div>
            <div class="bitup-event-card__participants">
                <div class="bitup-event-card__participants-icon">üë•</div>
                <div class="bitup-event-card__participants-count">${escapeHtml(card.participantsCount) || 0}</div>
            </div>
			</a>
        `;

			// –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
			container.appendChild(cardDiv);
		});
	});
</script>